// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`concurrent async actions 1`] = `
{
  "redo": [],
  "undo": [
    {
      "actionName": "incX",
      "attachedState": {
        "afterEvent": undefined,
        "beforeEvent": undefined,
      },
      "inversePatches": [
        {
          "op": "replace",
          "path": [
            "x",
          ],
          "value": 0,
        },
        {
          "op": "replace",
          "path": [
            "x",
          ],
          "value": 1,
        },
      ],
      "patches": [
        {
          "op": "replace",
          "path": [
            "x",
          ],
          "value": 1,
        },
        {
          "op": "replace",
          "path": [
            "x",
          ],
          "value": 2,
        },
      ],
      "targetPath": [],
      "type": "single",
    },
    {
      "actionName": "incY",
      "attachedState": {
        "afterEvent": undefined,
        "beforeEvent": undefined,
      },
      "inversePatches": [
        {
          "op": "replace",
          "path": [
            "y",
          ],
          "value": 0,
        },
        {
          "op": "replace",
          "path": [
            "y",
          ],
          "value": 10,
        },
      ],
      "patches": [
        {
          "op": "replace",
          "path": [
            "y",
          ],
          "value": 10,
        },
        {
          "op": "replace",
          "path": [
            "y",
          ],
          "value": 20,
        },
      ],
      "targetPath": [],
      "type": "single",
    },
  ],
}
`;

exports[`createGroup 1`] = `
[
  {
    "actionName": "incY",
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "inversePatches": [
      {
        "op": "replace",
        "path": [
          "p",
          "p2",
          "y",
        ],
        "value": 0,
      },
    ],
    "patches": [
      {
        "op": "replace",
        "path": [
          "p",
          "p2",
          "y",
        ],
        "value": 100,
      },
    ],
    "targetPath": [
      "p",
      "p2",
    ],
    "type": "single",
  },
  {
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "events": [
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 0,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 3,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 3,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 6,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 6,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 10,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
    ],
    "groupName": "group1",
    "type": "group",
  },
]
`;

exports[`createGroup 2`] = `
[
  {
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "events": [
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 0,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 3,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 3,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 6,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 6,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 10,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
    ],
    "groupName": "group1",
    "type": "group",
  },
]
`;

exports[`createGroup 3`] = `
[
  {
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "events": [
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 0,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 3,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 3,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 6,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 6,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 10,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
    ],
    "groupName": "group1",
    "type": "group",
  },
  {
    "actionName": "incY",
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "inversePatches": [
      {
        "op": "replace",
        "path": [
          "p",
          "p2",
          "y",
        ],
        "value": 0,
      },
    ],
    "patches": [
      {
        "op": "replace",
        "path": [
          "p",
          "p2",
          "y",
        ],
        "value": 100,
      },
    ],
    "targetPath": [
      "p",
      "p2",
    ],
    "type": "single",
  },
]
`;

exports[`createGroup 4`] = `
[
  {
    "actionName": "incY",
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "inversePatches": [
      {
        "op": "replace",
        "path": [
          "p",
          "p2",
          "y",
        ],
        "value": 0,
      },
    ],
    "patches": [
      {
        "op": "replace",
        "path": [
          "p",
          "p2",
          "y",
        ],
        "value": 100,
      },
    ],
    "targetPath": [
      "p",
      "p2",
    ],
    "type": "single",
  },
]
`;

exports[`createGroup 5`] = `
[
  {
    "actionName": "incY",
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "inversePatches": [
      {
        "op": "replace",
        "path": [
          "p",
          "p2",
          "y",
        ],
        "value": 0,
      },
    ],
    "patches": [
      {
        "op": "replace",
        "path": [
          "p",
          "p2",
          "y",
        ],
        "value": 100,
      },
    ],
    "targetPath": [
      "p",
      "p2",
    ],
    "type": "single",
  },
  {
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "events": [
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 0,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 3,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 3,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 6,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 6,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 10,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
    ],
    "groupName": "group1",
    "type": "group",
  },
]
`;

exports[`undo-aware substore called from non undo-aware root store 1`] = `
[
  {
    "actionName": "addValue",
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "inversePatches": [
      {
        "op": "replace",
        "path": [
          "values",
          "length",
        ],
        "value": 0,
      },
    ],
    "patches": [
      {
        "op": "add",
        "path": [
          "values",
          0,
        ],
        "value": 1,
      },
    ],
    "targetPath": [
      "substore",
    ],
    "type": "single",
  },
]
`;

exports[`undo-aware substore called from non undo-aware root store 2`] = `
[
  {
    "actionName": "addValue",
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "inversePatches": [
      {
        "op": "replace",
        "path": [
          "values",
          "length",
        ],
        "value": 2,
      },
    ],
    "patches": [
      {
        "op": "add",
        "path": [
          "values",
          2,
        ],
        "value": 3,
      },
    ],
    "targetPath": [
      "substore",
    ],
    "type": "single",
  },
]
`;

exports[`undoMiddleware - async 1`] = `
{
  "redo": [],
  "undo": [
    {
      "actionName": "incX",
      "attachedState": {
        "afterEvent": undefined,
        "beforeEvent": undefined,
      },
      "inversePatches": [
        {
          "op": "replace",
          "path": [
            "p",
            "x",
          ],
          "value": 0,
        },
      ],
      "patches": [
        {
          "op": "replace",
          "path": [
            "p",
            "x",
          ],
          "value": 1,
        },
      ],
      "targetPath": [
        "p",
      ],
      "type": "single",
    },
    {
      "actionName": "incX",
      "attachedState": {
        "afterEvent": undefined,
        "beforeEvent": undefined,
      },
      "inversePatches": [
        {
          "op": "replace",
          "path": [
            "p",
            "x",
          ],
          "value": 1,
        },
      ],
      "patches": [
        {
          "op": "replace",
          "path": [
            "p",
            "x",
          ],
          "value": 3,
        },
      ],
      "targetPath": [
        "p",
      ],
      "type": "single",
    },
    {
      "actionName": "incY",
      "attachedState": {
        "afterEvent": undefined,
        "beforeEvent": undefined,
      },
      "inversePatches": [
        {
          "op": "replace",
          "path": [
            "p",
            "p2",
            "y",
          ],
          "value": 0,
        },
      ],
      "patches": [
        {
          "op": "replace",
          "path": [
            "p",
            "p2",
            "y",
          ],
          "value": 10,
        },
      ],
      "targetPath": [
        "p",
        "p2",
      ],
      "type": "single",
    },
    {
      "actionName": "incXY",
      "attachedState": {
        "afterEvent": undefined,
        "beforeEvent": undefined,
      },
      "inversePatches": [
        {
          "op": "replace",
          "path": [
            "p",
            "x",
          ],
          "value": 3,
        },
        {
          "op": "replace",
          "path": [
            "p",
            "p2",
            "y",
          ],
          "value": 10,
        },
      ],
      "patches": [
        {
          "op": "replace",
          "path": [
            "p",
            "x",
          ],
          "value": 6,
        },
        {
          "op": "replace",
          "path": [
            "p",
            "p2",
            "y",
          ],
          "value": 30,
        },
      ],
      "targetPath": [
        "p",
      ],
      "type": "single",
    },
  ],
}
`;

exports[`undoMiddleware - sync 1`] = `
{
  "redo": [],
  "undo": [
    {
      "actionName": "incX",
      "attachedState": {
        "afterEvent": "afterIncX1",
        "beforeEvent": "beforeIncX1",
      },
      "inversePatches": [
        {
          "op": "replace",
          "path": [
            "p",
            "x",
          ],
          "value": 0,
        },
      ],
      "patches": [
        {
          "op": "replace",
          "path": [
            "p",
            "x",
          ],
          "value": 1,
        },
      ],
      "targetPath": [
        "p",
      ],
      "type": "single",
    },
    {
      "actionName": "incX",
      "attachedState": {
        "afterEvent": "afterIncX2",
        "beforeEvent": "beforeIncX2",
      },
      "inversePatches": [
        {
          "op": "replace",
          "path": [
            "p",
            "x",
          ],
          "value": 1,
        },
      ],
      "patches": [
        {
          "op": "replace",
          "path": [
            "p",
            "x",
          ],
          "value": 3,
        },
      ],
      "targetPath": [
        "p",
      ],
      "type": "single",
    },
    {
      "actionName": "incY",
      "attachedState": {
        "afterEvent": "afterIncY10",
        "beforeEvent": "beforeIncY10",
      },
      "inversePatches": [
        {
          "op": "replace",
          "path": [
            "p",
            "p2",
            "y",
          ],
          "value": 0,
        },
      ],
      "patches": [
        {
          "op": "replace",
          "path": [
            "p",
            "p2",
            "y",
          ],
          "value": 10,
        },
      ],
      "targetPath": [
        "p",
        "p2",
      ],
      "type": "single",
    },
    {
      "actionName": "incXY",
      "attachedState": {
        "afterEvent": "afterIncXY3,20",
        "beforeEvent": "beforeIncXY3,20",
      },
      "inversePatches": [
        {
          "op": "replace",
          "path": [
            "p",
            "x",
          ],
          "value": 3,
        },
        {
          "op": "replace",
          "path": [
            "p",
            "p2",
            "y",
          ],
          "value": 10,
        },
      ],
      "patches": [
        {
          "op": "replace",
          "path": [
            "p",
            "x",
          ],
          "value": 6,
        },
        {
          "op": "replace",
          "path": [
            "p",
            "p2",
            "y",
          ],
          "value": 30,
        },
      ],
      "targetPath": [
        "p",
      ],
      "type": "single",
    },
  ],
}
`;

exports[`undoMiddleware - sync 2`] = `
[
  {
    "actionName": "pushArr",
    "attachedState": {
      "afterEvent": "beforeIncXY3,20",
      "beforeEvent": "beforeIncXY3,20",
    },
    "inversePatches": [
      {
        "op": "replace",
        "path": [
          "p",
          "arr",
          "length",
        ],
        "value": 0,
      },
      {
        "op": "replace",
        "path": [
          "p",
          "arr",
          "length",
        ],
        "value": 1,
      },
    ],
    "patches": [
      {
        "op": "add",
        "path": [
          "p",
          "arr",
          0,
        ],
        "value": -9,
      },
      {
        "op": "add",
        "path": [
          "p",
          "arr",
          1,
        ],
        "value": 1,
      },
    ],
    "targetPath": [
      "p",
    ],
    "type": "single",
  },
  {
    "actionName": "pushArr",
    "attachedState": {
      "afterEvent": "beforeIncXY3,20",
      "beforeEvent": "beforeIncXY3,20",
    },
    "inversePatches": [
      {
        "op": "replace",
        "path": [
          "p",
          "arr",
          "length",
        ],
        "value": 2,
      },
      {
        "op": "replace",
        "path": [
          "p",
          "arr",
          "length",
        ],
        "value": 3,
      },
    ],
    "patches": [
      {
        "op": "add",
        "path": [
          "p",
          "arr",
          2,
        ],
        "value": -8,
      },
      {
        "op": "add",
        "path": [
          "p",
          "arr",
          3,
        ],
        "value": 2,
      },
    ],
    "targetPath": [
      "p",
    ],
    "type": "single",
  },
]
`;

exports[`withGroup 1`] = `
[
  {
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "events": [
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 0,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 3,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "events": [
          {
            "actionName": "incX",
            "inversePatches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 3,
              },
            ],
            "patches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 6,
              },
            ],
            "targetPath": [
              "p",
            ],
            "type": "single",
          },
          {
            "actionName": "incX",
            "inversePatches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 6,
              },
            ],
            "patches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 10,
              },
            ],
            "targetPath": [
              "p",
            ],
            "type": "single",
          },
        ],
        "groupName": undefined,
        "type": "group",
      },
    ],
    "groupName": "group1",
    "type": "group",
  },
]
`;

exports[`withGroup 2`] = `
[
  {
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "events": [
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 0,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 3,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "events": [
          {
            "actionName": "incX",
            "inversePatches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 3,
              },
            ],
            "patches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 6,
              },
            ],
            "targetPath": [
              "p",
            ],
            "type": "single",
          },
          {
            "actionName": "incX",
            "inversePatches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 6,
              },
            ],
            "patches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 10,
              },
            ],
            "targetPath": [
              "p",
            ],
            "type": "single",
          },
        ],
        "groupName": undefined,
        "type": "group",
      },
    ],
    "groupName": "group1",
    "type": "group",
  },
]
`;

exports[`withGroup 3`] = `
[
  {
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "events": [
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 0,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 3,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "events": [
          {
            "actionName": "incX",
            "inversePatches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 3,
              },
            ],
            "patches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 6,
              },
            ],
            "targetPath": [
              "p",
            ],
            "type": "single",
          },
          {
            "actionName": "incX",
            "inversePatches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 6,
              },
            ],
            "patches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 10,
              },
            ],
            "targetPath": [
              "p",
            ],
            "type": "single",
          },
        ],
        "groupName": undefined,
        "type": "group",
      },
    ],
    "groupName": "group1",
    "type": "group",
  },
]
`;

exports[`withGroupFlow - concurrent 1`] = `
[
  {
    "actionName": "incY",
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "inversePatches": [
      {
        "op": "replace",
        "path": [
          "p",
          "p2",
          "y",
        ],
        "value": 0,
      },
    ],
    "patches": [
      {
        "op": "replace",
        "path": [
          "p",
          "p2",
          "y",
        ],
        "value": 10,
      },
    ],
    "targetPath": [
      "p",
      "p2",
    ],
    "type": "single",
  },
  {
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "events": [
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 0,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 3,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
    ],
    "groupName": "group1",
    "type": "group",
  },
  {
    "actionName": "incY",
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "inversePatches": [
      {
        "op": "replace",
        "path": [
          "p",
          "p2",
          "y",
        ],
        "value": 10,
      },
    ],
    "patches": [
      {
        "op": "replace",
        "path": [
          "p",
          "p2",
          "y",
        ],
        "value": 20,
      },
    ],
    "targetPath": [
      "p",
      "p2",
    ],
    "type": "single",
  },
]
`;

exports[`withGroupFlow - simple case 1`] = `
[
  {
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "events": [
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 0,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 3,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "events": [
          {
            "actionName": "incX",
            "inversePatches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 3,
              },
            ],
            "patches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 6,
              },
            ],
            "targetPath": [
              "p",
            ],
            "type": "single",
          },
          {
            "actionName": "incX",
            "inversePatches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 6,
              },
            ],
            "patches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 10,
              },
            ],
            "targetPath": [
              "p",
            ],
            "type": "single",
          },
        ],
        "groupName": undefined,
        "type": "group",
      },
    ],
    "groupName": "group1",
    "type": "group",
  },
]
`;

exports[`withGroupFlow - simple case 2`] = `
[
  {
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "events": [
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 0,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 3,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "events": [
          {
            "actionName": "incX",
            "inversePatches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 3,
              },
            ],
            "patches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 6,
              },
            ],
            "targetPath": [
              "p",
            ],
            "type": "single",
          },
          {
            "actionName": "incX",
            "inversePatches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 6,
              },
            ],
            "patches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 10,
              },
            ],
            "targetPath": [
              "p",
            ],
            "type": "single",
          },
        ],
        "groupName": undefined,
        "type": "group",
      },
    ],
    "groupName": "group1",
    "type": "group",
  },
]
`;

exports[`withGroupFlow - simple case 3`] = `
[
  {
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "events": [
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 0,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 3,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "events": [
          {
            "actionName": "incX",
            "inversePatches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 3,
              },
            ],
            "patches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 6,
              },
            ],
            "targetPath": [
              "p",
            ],
            "type": "single",
          },
          {
            "actionName": "incX",
            "inversePatches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 6,
              },
            ],
            "patches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 10,
              },
            ],
            "targetPath": [
              "p",
            ],
            "type": "single",
          },
        ],
        "groupName": undefined,
        "type": "group",
      },
    ],
    "groupName": "group1",
    "type": "group",
  },
]
`;

exports[`withGroupFlow - throwing 1`] = `
[
  {
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "events": [
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 0,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "events": [
          {
            "actionName": "incX",
            "inversePatches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 1,
              },
            ],
            "patches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 4,
              },
            ],
            "targetPath": [
              "p",
            ],
            "type": "single",
          },
        ],
        "groupName": undefined,
        "type": "group",
      },
    ],
    "groupName": "group1",
    "type": "group",
  },
]
`;

exports[`withGroupFlow - throwing 2`] = `
[
  {
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "events": [
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 0,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "events": [
          {
            "actionName": "incX",
            "inversePatches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 1,
              },
            ],
            "patches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 4,
              },
            ],
            "targetPath": [
              "p",
            ],
            "type": "single",
          },
        ],
        "groupName": undefined,
        "type": "group",
      },
    ],
    "groupName": "group1",
    "type": "group",
  },
]
`;

exports[`withGroupFlow - throwing 3`] = `
[
  {
    "attachedState": {
      "afterEvent": undefined,
      "beforeEvent": undefined,
    },
    "events": [
      {
        "actionName": "incX",
        "inversePatches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 0,
          },
        ],
        "patches": [
          {
            "op": "replace",
            "path": [
              "p",
              "x",
            ],
            "value": 1,
          },
        ],
        "targetPath": [
          "p",
        ],
        "type": "single",
      },
      {
        "events": [
          {
            "actionName": "incX",
            "inversePatches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 1,
              },
            ],
            "patches": [
              {
                "op": "replace",
                "path": [
                  "p",
                  "x",
                ],
                "value": 4,
              },
            ],
            "targetPath": [
              "p",
            ],
            "type": "single",
          },
        ],
        "groupName": undefined,
        "type": "group",
      },
    ],
    "groupName": "group1",
    "type": "group",
  },
]
`;
